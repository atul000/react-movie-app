{"ast":null,"code":"var _jsxFileName = \"/Users/atul/Desktop/movie-app/src/components/Movie/Movie.js\";\nimport React, { Component } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport Navigation from \"../elements/Navigation/Navigation\";\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\nimport FourColdGrid from \"../elements/FourColGrid/FourColGrid\";\nimport Actor from \"../elements/Actor/Actor\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Movie.css\";\nexport default class Movie extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movie: null,\n      actors: null,\n      directors: [],\n      loading: false\n    };\n\n    this.fetchItems = endpoint => {\n      fetch(endpoint).then(res => res.json()).then(res => {\n        if (res.status_code) {\n          this.setState({\n            loading: false\n          });\n        } else {\n          this.setState({\n            movie: res\n          }, () => {\n            // fetch actors in setState callback function\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\n            fetch(endpoint).then(res => res.json()).then(res => {\n              const directors = res.crew.filter(member => member.job === \"Director\");\n              this.setState({\n                actors: res.cast,\n                directors,\n                loading: false\n              });\n            });\n          });\n        }\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    }); // fetch movie\n\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n    this.fetchItems(endpoint);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"rmdb-movie\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Navigation, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(MovieInfo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(MovieInfoBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), React.createElement(FourColdGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(Spinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/atul/Desktop/movie-app/src/components/Movie/Movie.js"],"names":["React","Component","API_URL","API_KEY","Navigation","MovieInfo","MovieInfoBar","FourColdGrid","Actor","Spinner","Movie","state","movie","actors","directors","loading","fetchItems","endpoint","fetch","then","res","json","status_code","setState","props","match","params","movieId","crew","filter","member","job","cast","catch","err","console","log","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,cAAjC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,iCAAtB;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,aAAP;AAEA,eAAe,MAAMC,KAAN,SAAoBT,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CU,KAD2C,GACnC;AACNC,MAAAA,KAAK,EAAE,IADD;AAENC,MAAAA,MAAM,EAAE,IAFF;AAGNC,MAAAA,SAAS,EAAE,EAHL;AAINC,MAAAA,OAAO,EAAE;AAJH,KADmC;;AAAA,SAe3CC,UAf2C,GAe9BC,QAAQ,IAAI;AACvBC,MAAAA,KAAK,CAACD,QAAD,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACX,YAAIA,GAAG,CAACE,WAAR,EAAqB;AACnB,eAAKC,QAAL,CAAc;AAAER,YAAAA,OAAO,EAAE;AAAX,WAAd;AACD,SAFD,MAEO;AACL,eAAKQ,QAAL,CAAc;AAAEX,YAAAA,KAAK,EAAEQ;AAAT,WAAd,EAA8B,MAAM;AAClC;AACA,kBAAMH,QAAQ,GAAI,GAAEf,OAAQ,SAAQ,KAAKsB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAQ,oBAAmBxB,OAAQ,EAA/F;AACAe,YAAAA,KAAK,CAACD,QAAD,CAAL,CACGE,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQC,GAAG,IAAI;AACX,oBAAMN,SAAS,GAAGM,GAAG,CAACQ,IAAJ,CAASC,MAAT,CAChBC,MAAM,IAAIA,MAAM,CAACC,GAAP,KAAe,UADT,CAAlB;AAGA,mBAAKR,QAAL,CAAc;AACZV,gBAAAA,MAAM,EAAEO,GAAG,CAACY,IADA;AAEZlB,gBAAAA,SAFY;AAGZC,gBAAAA,OAAO,EAAE;AAHG,eAAd;AAKD,aAXH;AAYD,WAfD;AAgBD;AACF,OAvBH,EAwBGkB,KAxBH,CAwBSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAxBhB;AAyBD,KAzC0C;AAAA;;AAQ3CG,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,QAAL,CAAc;AAAER,MAAAA,OAAO,EAAE;AAAX,KAAd,EADkB,CAElB;;AACA,UAAME,QAAQ,GAAI,GAAEf,OAAQ,SAAQ,KAAKsB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAQ,YAAWxB,OAAQ,iBAAvF;AACA,SAAKa,UAAL,CAAgBC,QAAhB;AACD;;AA8BDqB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AArD0C","sourcesContent":["import React, { Component } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport Navigation from \"../elements/Navigation/Navigation\";\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\nimport FourColdGrid from \"../elements/FourColGrid/FourColGrid\";\nimport Actor from \"../elements/Actor/Actor\";\nimport Spinner from \"../elements/Spinner/Spinner\";\nimport \"./Movie.css\";\n\nexport default class Movie extends Component {\n  state = {\n    movie: null,\n    actors: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    // fetch movie\n    const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\n    this.fetchItems(endpoint);\n  }\n\n  fetchItems = endpoint => {\n    fetch(endpoint)\n      .then(res => res.json())\n      .then(res => {\n        if (res.status_code) {\n          this.setState({ loading: false });\n        } else {\n          this.setState({ movie: res }, () => {\n            // fetch actors in setState callback function\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\n            fetch(endpoint)\n              .then(res => res.json())\n              .then(res => {\n                const directors = res.crew.filter(\n                  member => member.job === \"Director\"\n                );\n                this.setState({\n                  actors: res.cast,\n                  directors,\n                  loading: false\n                });\n              });\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"rmdb-movie\">\n        <Navigation />\n        <MovieInfo />\n        <MovieInfoBar />\n        <FourColdGrid />\n        <Spinner />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}